@model IEnumerable<Episode>

@{
    ViewData["Title"] = "Episodes";
}

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .episodeContent {
        max-width: 800px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

        .episodeContent h2 {
            color: #ff6666;
            text-align: center;
        }

        .episodeContent ul {
            list-style-type: none;
            padding: 0;
        }

        .episodeContent li {
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .episodeContent .episode-button {
            background-color: #ff6666;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            transition: background-color 0.2s ease-in-out;
        }

            .episodeContent .episode-button:hover {
                background-color: #ff9999;
            }

        .episodeContent .episode-number {
            font-size: 18px;
            margin-right: 10px;
        }

        .episodeContent .episode-title {
            font-size: 16px;
            flex-grow: 1;
        }

    .add-season-button-container {
        display: flex;
        justify-content: center;
    }

    .add-season-button a {
        display: inline-block;
        padding: 5px 10px;
        background-color: #FF6666;
        color: white;
        text-decoration: none;
        border-radius: 5px;
    }

        .add-season-button a:hover {
            background-color: #FF6666;
            color: white;
        }

    .btn-primary {
        background-color: #fff000;
        color: white;
        border: none;
    }

    .btn {
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }

    .button-group {
        flex-direction: column;
        align-items: flex-end;
        gap: 5px; /* Расстояние между кнопками */
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
        border: none;
    }
</style>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<div class="episodeContent">
    <h2>Episodes</h2>
    @if (Model != null && Model.Any())
    {
        <ul>
            @foreach (var episode in Model)
            {
                <li>
                    <span class="episode-number">@episode.EpisodeNumber</span>
                    <span class="episode-title">@episode.ReleaseEpisode</span>
                    <div class="button-group">
                        @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                        {
                            <a type="button" class="btn btn-primary" href="@Url.Action("Edit", "Episode", new { animeName = episode.AnimeName,
                            seasonNumber = episode.SeasonNumber, episodeNumber = episode.EpisodeNumber})">
                                <i class="fa fa-pencil"></i>
                            </a>
                            if (Model.Count() > 1)
                            {
                                <a type="button" class="btn btn-danger" href="@Url.Action("Delete", "Episode", new { animeName = episode.AnimeName,
                            seasonNumber = episode.SeasonNumber, episodeNumber = episode.EpisodeNumber})">
                                    <i class="fa fa-trash"></i>
                                </a>
                            }
                        }
                        <a href="@Url.Action("About", "Episode", new { animeName = episode.AnimeName, seasonNumber = episode.SeasonNumber, episodeNumber = episode.EpisodeNumber })" class="episode-button">Watch</a>
                    </div>
                </li>
            }
            @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
            {
                <li class="add-season-button-container">
                    <div class="add-season-button">
                        <a href="@Url.Action("Create", "Episode", new { animeName = Model.ElementAt(0).AnimeName, seasonNumber = Model.ElementAt(0).SeasonNumber})">
                            Add New Episode
                        </a>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No episodes found for this season.</p>
    }
</div>

