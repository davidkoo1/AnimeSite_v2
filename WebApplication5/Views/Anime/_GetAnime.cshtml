@using System.Security.Claims;

<style>
   
    .card {
        margin-bottom: 20px;
        margin-top: 20px;
        break-inside: avoid;
    }

    .card-columns .card:hover .card-img {
        opacity: 1;
    }

    .card-columns .card-body {
        height: 105px;
        font-family: 'Nunito', sans-serif;
        background: #fbfafd;
        object-fit: contain;
    }

    .card-columns .card-img {
        height: 330px;
        vertical-align: bottom;
        background-position: center; /* Center the image */
        background-repeat: no-repeat; /* Do not repeat the image */
        background-size: cover; /* Resize the background image to cover the entire container */
        opacity: .8;
    }

    .modal .card-img {
        /*height: 500px;*/
        vertical-align: bottom;
        background-position: center; /* Center the image */
        background-repeat: no-repeat; /* Do not repeat the image */
        background-size: cover; /* Resize the background image to cover the entire container */
    }

    .card-columns .card:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 20px rgba(37,33,82,.12), 0 4px 8px rgba(37,33,82,.06);
    }

    .modal-content .title {
        font-weight: bold;
        font-size: 18px;
        margin-bottom: 10px;
    }

    .card-body .rating {
        font-weight: bold;
        font-size: 14px;
    }

    .genre-list {
        list-style: none;
        padding: 0;
        margin: 10px 0 0;
        display: flex;
        flex-wrap: wrap;
    }

    .genre-item {
        margin: 3px;
        padding: 2px 6px;
        background-color: #3498db;
        color: white;
        border-radius: 5px;
    }


</style>


@model Anime

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<div class="modal-content">
    <div class="modal-header">
        <div style="width: 100%; max-width: 100%; overflow-wrap: break-word;">
            <span><h5 class="modal-title" id="animeName">@Model.AnimeName</h5></span>
            <p>Genres</p>
            <ul class="genre-list">
                @foreach (var genre in Model.AnimeGenres)
                {
                    <li class="genre-item">@genre.Genre.Name</li>
                }
            </ul>
            @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
            {
                <span>
                    <small class="text-muted">
                    <a style="color:white; text-decoration:none;">
                        <button class="btn btn-primary">More Info</button>
                    </a>
                </small>
            </span>
                <a type="button" class="btn btn-primary" href="@Url.Action("Edit", "Anime", new { animeName = Model.AnimeName})">
                    <i class="fa fa-pencil"></i>
                </a>
            }

        </div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="margin: -10px; margin-bottom:auto;"></button>


    </div>
    <div class="modal-body">
        <!--<p class="title">Season list: </p>-->
        <div class="card-columns">
            @foreach (var season in Model.Seasons)
            {
                <div class="card">
                    <div class="card-img" style="background-image: url('@season.SeasonImage');">
                    </div>
                    <div class="card-body">

                        <div class="rating">

                            @if (season.Ratings.Count() > 0)
                            {
                                double averageRating = season.Ratings.Average(x => x.Mark);
                                <span class="rating">Рейтинг</span> @averageRating.ToString("0.00")
                                <br />
                                for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= averageRating)
                                    {
                                        <span class="fa fa-star checked"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-star"></span>
                                    }
                                }

                            }
                            else
                            {
                                for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa fa-star"></span>
                                }
                            }
                        </div>
                        <span>
                            <small class="text-muted">
                                <a style="color:white; text-decoration:none;" href="@Url.Action("Detail", "Season", new { animeName = Model.AnimeName})#@season.SeasonNumber">
                                    <button class="btn btn-primary">Сезон-@season.SeasonNumber</button>
                                </a>
                            </small>
                        </span>

                    </div>
                </div>
            }
        </div>

    </div>
    <div class="modal-footer">
        

        @{
            if (User.Identity.IsAuthenticated)
            {
                var loggedInUserId = User.GetUserId(); // Get the user's ID


                var newFavouriteAnime = new FavouriteAnime()
                {
                    //Model - Anime
                    AnimeName = Model.AnimeName,
                    AppUserId = loggedInUserId,
                };

                await Html.RenderPartialAsync("_FavouriteAnime", newFavouriteAnime);
            }
            else
            {
                <p>Зарегестрируйся, чтобы ты мог сохранять любимые аниме</p>
            }

        }
    </div>


</div>