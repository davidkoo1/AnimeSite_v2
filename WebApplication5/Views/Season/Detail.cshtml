@using System.Security.Claims;
@model IList<Season>
@{
    ViewData["Title"] = "Detail";
}

<link rel="stylesheet" href="~/css/season.css">
<style>
    .btn-primary {
        background-color: #fff777;
        color: #ff6666;
        border: none;
        width: 100%;
        margin-bottom: 5px;
    }

        .btn-primary:hover {
            background-color: #fff111;
        }

    .fa-star {
        cursor: pointer;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{
    var maxSeason = Model.ElementAt(Model.Max(x => x.SeasonNumber - 1));
    var maxEpisode = maxSeason.Episodes.ElementAt(maxSeason.Episodes.Count() - 1);
}
<h1>@Model.ElementAt(0).AnimeName</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
{
    <div class="NewEpisodeContent">
        <p class="comment"><strong>@(maxEpisode.EpisodeNumber + 1) серия выйдет через</strong></p>
        <p class="NewEpisodeText Countdown">2 дня</p>
        <p class="NewEpisodeText Countdown">12 часов</p>
        <p class="NewEpisodeText Countdown">30 минут</p>
        Надо сдлеать ссылку  чтобы мышкой наводился  пост увеличивался
    </div>
}

<div class="Seasonscontent">
    <div class="sector_border">
        <h2>Смотреть все сезоны и серии</h2>
    </div>

    <ul>
        @foreach (var season in Model)
        {
            <li id="@season.SeasonNumber" style="margin-bottom: 20px;">
                <div class="season-post">

                    <figure>
                        <a href="@Url.Action("Index", "Episode", new { animeName = season.AnimeName, seasonNumber = season.SeasonNumber })">
                            <img src="@season.SeasonImage" />
                        </a>
                        <figcaption>
                            <div class="centered-text">
                                @{

                                    var loggedInUserId = User.FindFirstValue(ClaimTypes.NameIdentifier); // Get the user's ID
                                    var userRating = season.Ratings.FirstOrDefault(r => r.AppUserId == loggedInUserId) ?? new Rating()
                {
                    AnimeName = season.AnimeName,
                    SeasonNumber = season.SeasonNumber,
                    Season = season,
                    AppUserId = loggedInUserId
                };

                                    await Html.RenderPartialAsync("_Rating", userRating);

                                }
                            </div>
                        </figcaption>


                    </figure>


                    <div class="season-details">
                        @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                        {
                            <a type="button" class="btn btn-primary" href="@Url.Action("Edit", "Season", new { animeName = season.AnimeName,
                            seasonNumber = season.SeasonNumber})">
                                <i class="fa fa-pencil"></i>
                            </a>
                            if (Model.Count() > 1)
                            {
                                <a type="button" class="btn btn-danger" href="@Url.Action("Delete", "Season", new { animeName = season.AnimeName,
                            seasonNumber = season.SeasonNumber})">
                                    <i class="fa fa-trash"></i>
                                </a>
                            }
                        }
                        @{
                            string watchTitle = "";
                            string watchNumber = "";
                            if (season.SeasonNumber > 0)
                            {
                                watchTitle = "Season";
                                watchNumber = watchTitle;
                            }
                            else
                            {
                                watchTitle = "Film";
                                watchNumber = watchTitle;
                            }
                        }
                        <p class="comment">@watchTitle Title: @season.SeasonTitle</p>
                        <p class="comment">@watchNumber Number: @Math.Abs(season.SeasonNumber)</p>
                        @if (season.Episodes.Count(x => x.SeasonNumber > 0) > 0)
                        {
                            <p class="comment">Episodes: @season.Episodes.Count(x => x.SeasonNumber > 0)</p>
                        }
                        @if (season.Ratings.Count > 0)
                        {
                            <p class="comment"><strong>Number votes: @season.Ratings.Count</strong></p>

                        }
                        else
                        {
                            <p class="comment"><strong>Будь первым кто поставил рейтинг этому сезону!</strong></p>
                        }
                    </div>
                </div>
                @if (season.Episodes != null && season.Episodes.Any())
                {
                    <div class="episode-list">
                        @foreach (var episode in season.Episodes)
                        {
                            <div class="episode">
                                <a href="@Url.Action("About", "Episode", new { animeName = season.AnimeName, seasonNumber = season.SeasonNumber, episodeNumber = episode.EpisodeNumber })">@episode.EpisodeNumber</a>
                            </div>
                        }
                        @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                        {
                            <div class="addEpisode-button">
                                <a href="@Url.Action("Create", "Episode", new { animeName = season.AnimeName, seasonNumber = season.SeasonNumber })">
                                    +
                                </a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>No episodes found for this season.</p>
                }
            </li>
        }
        @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
        {
            <li class="add-season-button-container">
                <div class="add-season-button">
                    <a href="@Url.Action("Create", "Season", new { animeName = Model.ElementAt(0).AnimeName })">
                        Add New Season
                    </a>
                </div>
            </li>
        }
    </ul>
</div>


@{
    var sectionName = ViewBag.SelectSeason as string;
}



@if (!string.IsNullOrEmpty(sectionName))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const targetSection = document.getElementById(sectionName);
            if (targetSection) {
                targetSection.scrollIntoView();
            }
        });
    </script>
}

